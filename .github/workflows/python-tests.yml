# This workflow will install Python dependencies, run tests and lint on multiple versions of Python
# Author : Shikhar Tuli (https://github.com/shikhartuli)

name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Get the number of TODO comments in code-base
  get_todos:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: todos
        name: Get TODO comments in code-base
        run: echo "##[set-output name=data;]$(grep -rw './cnnbench/' -e 'TODO' | wc -l)"
      - name: Generate TODOs badge
        uses: RubbaBoy/BYOB@v1.2.0
        with:
          NAME: todos
          LABEL: 'TODOs'
          STATUS: ${{ steps.todos.outputs.data }}
          COLOR: FFC401
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
  # Build and run unit-tests on different Python versions
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test graph utility
      run: pytest cnnbench/tests/graph_util_test.py
    - name: Test graph generator
      run: pytest cnnbench/tests/generate_graphs_test.py
    - name: Test module spec generator
      run: pytest cnnbench/tests/module_spec_test.py
    - name: Test model builder
      run: pytest cnnbench/tests/model_builder_test.py
    - name: Basic model run
      run: pytest cnnbench/tests/run_evaluation_test.py
    
